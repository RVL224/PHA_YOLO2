from ultralytics import YOLO
import numpy as np

# Load a model
model = YOLO('/workspace/PHA_YOLO/runs/obb/       /weights/best.pt')
metrics = model.val(
    data='/workspace/PHA_YOLO/ultralytics/cfg/datasets/HRSC2016_MS.yaml'
)

# VOC AP 計算函式
# def voc_ap(rec, prec, use_07_metric=False):
#     if use_07_metric:
#         ap = 0.0
#         for t in np.arange(0.0, 1.1, 0.1):
#             if np.sum(rec >= t) == 0:
#                 p = 0
#             else:
#                 p = np.max(prec[rec >= t])
#             ap += p / 11.0
#     else:
#         mrec = np.concatenate(([0.0], rec, [1.0]))
#         mpre = np.concatenate(([0.0], prec, [0.0]))
#         for i in range(mpre.size - 1, 0, -1):
#             mpre[i - 1] = max(mpre[i - 1], mpre[i])
#         i = np.where(mrec[1:] != mrec[:-1])[0]
#         ap = np.sum((mrec[i + 1] - mrec[i]) * mpre[i + 1])
#     return ap

# # 從 metrics 擷取 PR 曲線
# p_curve = metrics.box.p_curve  # shape: (nc, 100)
# r_curve = metrics.box.r_curve  # shape: (nc, 100)

# # 計算每個類別的 AP
# ap_list = []
# for class_id in range(p_curve.shape[0]):
#     prec = p_curve[class_id]
#     rec = r_curve[class_id]
#     ap = voc_ap(rec, prec, use_07_metric=True)
#     ap_list.append(ap)
#     print(f"Class {class_id} VOC07 AP = {ap:.3f}")

# # 計算 mean AP
# map_07 = np.mean(ap_list)
# print(f"\n===> mAP (VOC07 11-point) = {map_07:.3f}")
